-- This file was generated using Luraph Obfuscator v13.5.6

return(function(yH,BH,lH,MH,xH,gH,JH,XH,iH,VH,wH,eH,aH,SH,nH,sH,uH,kH,oH,LH,YH,IH,DH,ZH,PH,mH,QH,bH,tH,vH,RH,AH,GH,dH,KH,CH,U,...)local r,f,F,c,NH,W,p,J,g=select,nH,tostring,string.byte,1,nil,nil,nil,(nil);while NH~=0x4 do if not(NH<=1)then do if NH~=2 then g=aH;NH=0X4;else J=lH.gsub;NH=3;end;end;else do if NH==0X0 then p=JH;NH=2;else do W=lH.sub;end;NH=0;end;end;end;end;local e=rawget;NH=0;local v,o,M=nil,nil,nil;while NH<=2 do if not(NH<=0X00)then do if NH~=0X1 then o=yH;NH=1;else M=0x2^0x34;NH=3;end;end;else v=gH;NH=0x2;end;end;local R,P=getfenv,0x0001;NH=3;local E,G,l,I=nil,nil,nil,nil;while NH~=5 do if not(NH<=1)then if NH<=0x2 then do NH=4;end;else if NH~=3 then I={[0X0]={[0X000]=0x000,0x1,2,0X3,0X004,5,0x6,0x7,0X8,0X9,10,11,12,0xD,0xE,15},{[0x0]=0X01,0,0X00003,0X2,5,0X4,0X00007,0X006,9,8,11,0Xa,tH,0x0c,vH,0XE},{[0]=dH,0X003,0x000,1,0X006,7,4,5,10,11,8,9,14,0XF,0x00C,0x00d},{[0x0]=0X3,0X2,0X1,0X00000,0X7,0x6,5,oH,11,0X0a,0x9,0x8,0XF,0Xe,tH,0XC},{[0]=oH,0X0005,6,7,0,0X1,0X2,3,12,13,14,0xf,8,0X9,10,11},{[0]=5,0x4,7,iH,uH,0X0,0X00003,0X2,0X000d,RH,15,0Xe,0X9,0X08,0xb,10},{[0]=0X00006,0x00007,oH,QH,0x002,0X3,0X0,1,14,15,12,0X0000D,0X000A,11,0x8,PH},{[0]=0X07,6,5,4,0X03,0X2,1,0x00000,0Xf,XH,tH,12,11,0XA,9,8},{[bH]=8,0X9,10,0XB,12,13,14,0X00F,0X00000,uH,2,3,0X04,0X5,0X006,0X0007},{[0X0]=0X09,8,0Xb,0XA,13,12,15,14,uH,0,0X3,2,0X00005,4,7,6},{[0X0]=0xA,0X0000b,0x8,9,0X000e,0X0000F,0X00C,13,2,0X3,0X0,0X00001,0x6,KH,0X4,0X5},{[0x00000]=0X000b,0X000a,9,0x8,vH,0XE,0xd,0X0C,3,dH,1,0x0,0X7,0X06,0x5,4},{[0]=0XC,tH,0XE,15,0x8,0x9,10,11,4,0X5,iH,7,0,0X0001,0x2,0x00003},{[0X0]=13,0Xc,0X0F,14,0X09,8,11,0XA,0X5,0x4,0X007,0X0006,0X1,0,0X00003,0x0002},{[0]=14,15,12,0X0d,0X000a,11,0X8,PH,0X00006,7,4,0X5,0x02,0X3,0,0X001},{[0X0]=0Xf,0X000e,0X000d,0XC,11,xH,0X9,0X8,KH,0X006,0X5,0X4,0x03,2,0X001,0}};NH=0x5;else do E={0X001,2,0X3};end;NH=0x0;end;end;else do if NH~=0 then do l=eH;end;NH=0x0002;else G=2147483648;NH=1;end;end;end;end;NH=0X1;local t,a,Q=nil,nil,nil;while NH<0X00004 do if NH<=0X00001 then if NH==0X0 then Q=(R and R()or mH);do NH=0X002;end;else t=GH;NH=3;end;else if NH==0X2 then do NH=4;end;else a=string.match;NH=0X0;end;end;end;local h=tonumber;NH=0;local X,b=nil,(nil);do while NH<2 do if NH~=0X0000 then NH=2;else X="";NH=1;end;end;end;do X=J(W(X,QH),MH,function(Af)do if c(Af,0X2)==0x48 then b=h(W(Af,uH,0X001));do return'';end;else local b2,h2=0X0,nil;while-1722173413 do if b2~=0X0 then if not(b)then return h2;else local gb=nil;for Ec=0,2 do if not(Ec<=0)then if Ec~=0X1 then return gb;else b=nil;end;else gb=l(h2,b);end;end;end;do break;end;else h2=p(h(Af,16));b2=0X1;end;end;end;end;end);end;NH=1;local K,FH=nil,nil;repeat do if NH==0x00000 then FH=1;do break;end;else K=function()local y4=(c(X,P,P));for I3=0x0,1 do do if I3~=0 then return y4;else do P=P+0X1;end;end;end;end;end;NH=0;end;end;until false;local D,Y={[0]=0X001},G-1;local y=(setmetatable);NH=0X000;local m,L,T,x,B,w,V=nil,nil,nil,nil,nil,nil,nil;while NH~=8 do do if not(NH<=0X3)then if NH<=0X05 then if NH~=4 then do V=function()local nI=x();local ZI,iI,LI,HI,rI=nil,nil,nil,nil,nil;local QI=(5);while QI~=0X0006 do if not(QI<=0X2)then if not(QI<=0X00003)then if QI~=0X4 then ZI=x();QI=2;else LI=w(ZI,20,0Xb);QI=0X0000;end;else rI=w(ZI,bH,20)*m+nI;QI=0X6;end;else if QI<=0X0 then HI=0x001;QI=0X3;elseif QI==1 then iI=(-1)^w(ZI,31,uH);QI=0X4;else do if nI==bH and ZI==0X0 then return 0X0;end;end;do QI=1;end;end;end;end;do if LI==0 then if rI~=0 then local wx=1;while wx~=0X2 do if wx~=0 then do LI=1;end;wx=0;else HI=0;do wx=0X2;end;end;end;else do return iI*bH;end;end;else if LI==0X7FF then if rI==0 then return iI*(0x0/0);else do return iI*(0X01/0);end;end;end;end;end;return iI*(0X0002^(LI-0X03Ff))*(rI/M+HI);end;end;NH=8;else T=LH;NH=0x3;end;else do if NH~=6 then L=m-0x1;do NH=0x4;end;else B=function()local Te,Ze=nil,(nil);local Je=(0X01);do repeat if Je<=0 then return Ze*m+Te;else if Je==1 then do Te,Ze=x(),x();end;Je=2;else if not(Ze>=G)then else Ze=Ze-m;end;Je=0X0;end;end;until false;end;end;NH=1;end;end;end;else if NH<=1 then if NH~=0X00 then w=function(G4,j4,v4)local z4=((G4/D[j4])%D[v4]);for ww=0X0000,0X1 do if ww~=0X00000 then return z4;else do z4=z4-z4%1;end;end;end;end;NH=0X0005;else m=0X100000000;NH=7;end;elseif NH~=2 then x=function()local di,ai,Vi,mi=nil,nil,nil,(nil);local Di=0;while(true)do if not(Di<=0X0)then if Di==1 then P=P+oH;Di=0X002;else return mi*16777216+Vi*YH+ai*256+di;end;else di,ai,Vi,mi=c(X,P,P+0X003);Di=1;end;end;end;do NH=0X002;end;else do local JO=0X02;for nd=uH,31 do for gb=0X00,1 do do if gb~=0 then do JO=JO*dH;end;else D[nd]=JO;end;end;end;end;end;NH=6;end;end;end;end;local u,s=setfenv,((bit or bit32));local S=s and s[DH]or function(jH,OH)do jH=jH%m;end;local EH,qH=nil,nil;for VE=0X0000,4 do if VE<=1 then if VE==0 then EH=1;else OH=OH%m;end;elseif not(VE<=0X00002)then do if VE~=3 then return qH+jH*EH+OH*EH;else while jH>0X000 and OH>bH do local dh=(jH%16);local Dh=(OH%16);qH=qH+I[dh][Dh]*EH;jH=(jH-dh)/0X010;OH=(OH-Dh)/16;EH=EH*0x10;end;end;end;else qH=0;end;end;end;local fH=(function(...)do return r(wH,...),{...};end;end);local C=(s and s[BH]or function(Bn,gn)Bn=Bn%m;gn=gn%m;do return((Bn+gn)-S(Bn,gn))/dH;end;end);local d=VH;local k=(s and s.bor or function(Qa,ga)local fa=0X0;repeat if fa<=0 then Qa=Qa%m;fa=0x002;elseif fa~=1 then do ga=ga%m;end;fa=1;else return L-C(L-Qa,L-ga);end;until false;end);local Z=s and s.bnot or function(TA)return L-(TA%m);end;NH=2;local A,N=nil,nil;while NH<0X0003 do if not(NH<=0)then if NH~=0X1 then A=s and s.lshift;NH=1;else N=s and s.rshift;NH=0;end;else A=A or function(lw,qw)if not(qw>=32)then else return 0X0;end;if qw<0X00000 then return N(lw,-qw);end;return(lw*D[qw])%m;end;NH=3;end;end;local q,j,O=nil,nil,nil;do for RV=0,3 do if RV<=0X0001 then if RV==0X0 then do N=N or function(IJ,xJ)local NJ=nil;local KJ=(0X01);while"\100\059g\067F$"do if KJ<=1 then if KJ~=0 then do if not(xJ>=0X020)then else return 0X00;end;end;KJ=0x2;else NJ=(IJ%m/D[xJ]);do KJ=3;end;end;elseif KJ~=0x0002 then return NJ-NJ%1;else if xJ<bH then return A(IJ,-xJ);end;KJ=0;end;end;end;end;else q=function()local YI,rI=0,(0);repeat local ol=(c(X,P,P));do P=P+0X1;end;YI=k(YI,A(C(ol,0X0007f),rI));if C(ol,0X80)==0X000 then do return YI;end;end;do rI=rI+0X7;end;until false;end;end;else if RV~=2 then O=function()local Ex=q();if not(Ex>Y)then else return Ex-m;end;do return Ex;end;end;else j={[uH]=5,[0]=0x0006,[0X2]=0X0007,[8]=2,[9]=0X004,[0X07]=0,[0X7]=0X1,[0X3]=4,[0X00]=0X9,[0X5]=0X6,[0x4]=5,[4]=0X07};end;end;end;end;local UH=K();local i=IH or table.unpack;local HH=(K());local rH=function(OH)local ei=0X0002;local jH,EH,qH,ti,bi=nil,nil,nil,nil,nil;do while-0X06302CFD3 do if not(ei<=0X00002)then if not(ei<=0X003)then if ei~=4 then HH=(0X00ed*HH+OH)%256;do break;end;else ti=S(jH[sH],HH);ei=0;end;else do qH=S(jH[2],HH);end;ei=4;end;else if ei<=0 then bi=S(jH[4],HH);do ei=0X5;end;else do if ei~=1 then jH={c(X,P,P+3)};ei=0X1;else EH=S(jH[1],HH);do ei=3;end;end;end;end;end;end;end;ei=0X0;do while 0X0789d0c37 do if ei==0 then P=P+4;ei=0x1;else return bi*SH+ti*0X000010000+qH*256+EH;end;end;end;end;local H=assert;local hH=function(VG)local SG=1;local AG,YG=nil,(nil);while 327466566 do if SG<=0 then YG="";SG=2;else do if SG~=0X01 then for FY=1,AG,0X1F3d do local cY,KY,yY=0x001,nil,nil;while cY<5 do if not(cY<=0X1)then if cY<=0X2 then if KY>AG then do KY=AG;end;end;cY=3;else do if cY~=0X3 then for n6=1,#yY do local j6=(0X0001);while j6<2 do if j6~=0X0000 then do yY[n6]=S(yY[n6],UH);end;j6=0x0;else UH=(VG*UH+0x2B)%0X0100;j6=0X02;end;end;end;cY=0;else yY={c(X,P+FY-0X1,P+KY-uH)};cY=0X4;end;end;end;else if cY~=0 then KY=FY+0X1f3D-uH;cY=2;else YG=YG..p(i(yY));cY=0X5;end;end;end;end;break;else do AG=x();end;SG=0X0;end;end;end;end;P=P+AG;do return YG;end;end;local z=type;NH=5;local zH,TH,WH,cH,pH=nil,nil,nil,nil,(nil);while NH<8 do if NH<=3 then if NH<=0X1 then if NH==0 then function cH()local q1,m1,b1={},nil,(nil);for u7=0X0,1 do if u7==0x00 then m1=0X1;else do b1=x()-0X016486;end;end;end;local E1,R1,t1,F1=nil,nil,nil,nil;for a4=0,0X3 do if a4<=1 then if a4~=0 then do R1=K();end;else do E1={nil,{},nil,nil,nil,nil,nil,{},{}};end;end;else if a4==2 then do t1={};end;else do F1=K()~=0;end;end;end;end;local w1=(nil);for Sf=0,0x4 do if Sf<=1 then if Sf==0x00 then for XZ=1,b1 do local oZ,BZ=1,nil;local MZ=(CH);while oZ~=2 do if oZ==0 then q1[XZ-0x1]=m1;do oZ=2;end;else do BZ=K();end;do oZ=0x0;end;end;end;oZ=2;local ZZ=nil;do repeat if oZ<=0 then ZZ={MZ,{}};do oZ=1;end;else do if oZ==0X01 then t1[m1]=ZZ;oZ=3;else if BZ==84 then MZ=kH;elseif BZ==0X0000e4 then MZ=W(hH(R1),K());elseif BZ==0X0000c8 then MZ=B();elseif BZ==166 then do MZ=V();end;elseif BZ==0X0000A3 then MZ=false;elseif BZ==0X1f then MZ=V()+x();elseif BZ==0X00055 then MZ=V()+x();elseif BZ==74 then MZ=W(hH(R1),x());elseif BZ==83 then MZ=W(hH(R1),x());elseif BZ==0XA0 then do MZ=W(hH(R1),x());end;elseif BZ==0XCD then MZ=W(hH(R1),0x2);end;oZ=0;end;end;end;until oZ>=0X003;end;oZ=0X00000;while oZ<=1 do if oZ~=0 then if F1 then zH[FH]=ZZ;do FH=FH+0X1;end;end;oZ=0x02;else do m1=m1+1;end;oZ=0X0001;end;end;end;else E1[0X00011]=K();end;else if not(Sf<=2)then if Sf==3 then E1[3]=w(w1,1,0X1)~=0;else E1[0X5]=w(w1,dH,1)~=0X000;end;else w1=K();end;end;end;local I1=(E1[8]);local D1=x()-0X000D825;local a1=(nil);local A1=(0);while A1<0x2 do if A1~=0x0 then do a1={};end;A1=2;else for fP=0,D1-0x1 do do(I1)[fP]=cH();end;end;A1=0X00001;end;end;A1=0;do while A1~=4 do if A1<=0X1 then if A1==0X0 then(E1)[0X013]=x();A1=2;else do E1[ZH]=x();end;do A1=0X004;end;end;else if A1==2 then E1[6]=a1;A1=3;else for dS=1,q()do a1[dS]={K(),q()};end;do A1=1;end;end;end;end;end;local h1=(nil);for kO=0x0,3 do do if not(kO<=1)then do if kO==2 then E1[0x00004]=q();else h1=x()-0XE438;end;end;else if kO~=0X0000 then E1[0X07]=q();else(E1)[0Xe]=x();end;end;end;end;local M1=(E1[0x9]);A1=1;local J1=nil;while(true)do if not(A1<=0X003)then do if A1<=0X5 then if A1~=0x4 then for fR=0X1,h1 do local mR=E1[0x9][fR];for lM,bM in AH(E)do local xM=j[bM];local rM=(mR[xM]);if rM==0XB then local hJ,dJ=nil,(nil);for S4=0,2 do do if not(S4<=0)then if S4~=0X1 then if dJ then(mR)[xM]=dJ[0x1];local FN=dJ[0x2];FN[#FN+1]={mR,xM};end;else dJ=t1[hJ];end;else hJ=q1[mR[bM]];end;end;end;elseif rM~=14 then else mR[bM]=fR+mR[bM]+uH;end;end;end;A1=0x7;else E1[xH]=K();do A1=0X0003;end;end;else if A1<=6 then for yY=uH,J1 do local IY,gY,HY=nil,nil,nil;local EY=(0X1);do repeat do if EY<=1 then if EY~=0 then IY=x();do EY=2;end;else do HY=x();end;EY=0X003;end;else do if EY==0X2 then do gY=x();end;EY=0X000;else for EF=IY,gY do do E1[2][EF]=HY;end;end;do EY=4;end;end;end;end;end;until EY==4;end;end;A1=0X8;else if A1==0X00007 then do(E1)[17]=K();end;A1=2;else(E1)[0X1]=q();A1=0x4;end;end;end;end;else if not(A1<=0X01)then do if A1~=0X002 then return E1;else(E1)[0X0000A]=K();A1=0X00;end;end;else if A1~=0 then for mi=uH,h1 do M1[mi]={[7]=K(),[0X3]=O(),[0X004]=K(),[5]=K(),[0X001]=O(),[dH]=O(),[0X00006]=q()};end;A1=0x00005;else J1=x();do A1=0X6;end;end;end;end;end;end;NH=0X3;else(TH)[2]=zH;do NH=0X6;end;end;else if NH==0X02 then TH={};NH=0X7;else pH=cH();NH=0x1;end;end;else if NH<=5 then if NH==4 then function WH(nY,kY,GY)local wY,MY=nY[0x9],(nY[8]);local UY,DY=nY[0X1],(nY[0x00004]);local oY,IY,xY=nY[2],nY[3],nY[0X5];local HY=y({},{__mode="v"});local CY,WY=nY[0X07],nil;do WY=function(...)local JV,DV=0x1,{};local tV=((R and R()or _ENV));local dV,FV,QV=0,(tV==Q and kY or tV),{[0X2]=DV,[1]=nY};local lV,sV=fH(...);lV=lV-0X1;for ZL=0X0,lV do do if UY>ZL then(DV)[ZL]=sV[ZL+1];else break;end;end;end;if not IY then sV=nil;elseif not(xY)then else(DV)[UY]={n=lV>=UY and lV-UY+0X1 or 0,i(sV,UY+0X1,lV+1)};end;if FV~=tV then if u then(u)(WY,FV);else _ENV=FV;end;end;local WV,pV,XV,MV=f(function()while true do local AF=wY[JV];local pF=AF[0X6];JV=JV+0X1;do if not(pF<0X02c)then if not(pF>=66)then if pF<55 then do if pF>=49 then if not(pF>=52)then if pF>=0x32 then if pF==51 then do if AF[2]==44 then do JV=JV-1;end;(wY)[JV]={[1]=(AF[0X1]-149),[6]=31,[3]=(AF[0X3]-0X95)};else local QY,FY=lV-UY,AF[0x1];if QY<0X0000 then QY=-0X0001;end;do for hD=FY,FY+QY do(DV)[hD]=sV[UY+(hD-FY)+0X1];end;end;dV=FY+QY;end;end;else local Fm=nil;local Cm=MY[AF[3]];local nm=Cm[0x6];local Gm=#nm;if Gm>0 then Fm={};for B7=0X1,Gm do local p7=(nm[B7]);if p7[1]==0X0 then do Fm[B7-0X00001]={DV,p7[0x2]};end;else Fm[B7-0X1]=GY[p7[0X2]];end;end;g(HY,Fm);end;do(DV)[AF[0x01]]=WH(Cm,FV,Fm);end;end;else local ef=(AF[0X1]);local Cf,Xf=DV[ef]();if Cf then DV[ef+0X1]=Xf;JV=AF[0X3];end;end;else if not(pF<53)then if pF==54 then(DV)[AF[0X1]]=DV[AF[3]]~=AF[7];else do repeat local w7,s7=HY,(DV);if#w7>0 then local Po=({});for Rs,ts in v,w7 do for UI,RI in v,ts do if not(RI[1]==s7 and RI[2]>=0X000)then else local Df=(RI[0X002]);if not(not Po[Df])then else do Po[Df]={s7[Df]};end;end;(RI)[1]=Po[Df];RI[0x02]=1;end;end;end;end;until true;end;return true,AF[0X1],0;end;else DV[AF[1]]=DV[AF[0X3]]<=DV[AF[2]];end;end;else if not(pF<46)then if pF>=0X2f then if pF~=48 then do(DV)[AF[0X1]]=DV[AF[3]]^DV[AF[2]];end;else(DV)[AF[1]]={i({},1,AF[0x3])};end;else if AF[0x02]==143 then JV=JV-1;(wY)[JV]={[1]=(AF[0X01]-0x00E4),[0X3]=(AF[3]-0X0000E4),[6]=0x00001f};elseif AF[0X2]==0XF7 then do JV=JV-1;end;(wY)[JV]={[1]=(AF[0x01]-61),[6]=51,[0x3]=(AF[0x03]-0X3D)};else(DV)[AF[0X00001]]=#DV[AF[3]];end;end;else if pF==0X2D then DV[AF[1]]=DV[AF[0X3]]>=DV[AF[0X2]];else TH[AF[3]]=DV[AF[0X1]];end;end;end;end;else do if pF>=60 then if not(pF>=63)then if pF<61 then(DV)[AF[1]]=DV[AF[3]]%DV[AF[2]];else do if pF~=0X3E then for jS=AF[0X001],AF[0X3]do do(DV)[jS]=nil;end;end;else DV[AF[1]][AF[0X4]]=DV[AF[2]];end;end;end;else if not(pF>=0X40)then do repeat local wc,Zc,qc=HY,DV,(AF[0X1]);if not(#wc>0X00000)then else local u7=({});for lj,Rj in v,wc do for qg,kg in v,Rj do if kg[0X1]==Zc and kg[2]>=qc then local vX=(kg[2]);if not(not u7[vX])then else(u7)[vX]={Zc[vX]};end;(kg)[1]=u7[vX];(kg)[2]=1;end;end;end;end;until true;end;else if pF~=65 then local pn=DV[AF[3]]/DV[AF[0X2]];DV[AF[1]]=pn-pn%1;else repeat local Ky,hy=HY,(DV);if not(#Ky>0x0)then else local hN=({});for S2,A2 in v,Ky do for BD,rD in v,A2 do do if not(rD[1]==hy and rD[2]>=0)then else local UP=rD[0X2];if not(not hN[UP])then else hN[UP]={hy[UP]};end;do(rD)[0X001]=hN[UP];end;(rD)[0X2]=1;end;end;end;end;end;until true;return true,AF[1],1;end;end;end;else if pF<57 then if pF~=0X0038 then do if DV[AF[0X3]]==DV[AF[2]]then JV=AF[0X1];end;end;else local Id=AF[0X1];DV[Id](DV[Id+0X01]);do dV=Id-0X1;end;end;else if not(pF<58)then if pF~=59 then dV=AF[1];do(DV)[dV]=DV[dV]();end;else(DV)[AF[0X01]]={};end;else local n1=(AF[0X1]);(DV)[n1]=DV[n1](DV[n1+0x0001]);dV=n1;end;end;end;end;end;else if pF>=0X4D then do if pF>=83 then if not(pF<0x56)then if pF<0X0057 then(DV)[AF[0X1]]=S(DV[AF[0X3]],DV[AF[0X0002]]);else if pF==88 then do if AF[2]~=154 then do(DV)[AF[1]]=-DV[AF[3]];end;else JV=JV-1;(wY)[JV]={[3]=(AF[3]-0X26),[1]=(AF[0X1]-38),[0x6]=7};end;end;else(DV)[AF[1]]=DV[AF[3]]<DV[AF[0x02]];end;end;else if not(pF<0x54)then if pF~=0X55 then local tn=(AF[0x001]);(DV)[tn]=DV[tn](i(DV,tn+0X01,dV));do dV=tn;end;else if DV[AF[3]]~=AF[0X7]then JV=AF[1];end;end;else(DV)[AF[0X1]]=false;end;end;else if pF<0X50 then if not(pF>=0X4e)then local vF=(GY[AF[0x003]]);vF[1][vF[2]]=DV[AF[0x1]];else if pF~=0X4f then local bq=AF[3];DV[AF[1]]=DV[bq]..DV[bq+0x1];else if DV[AF[3]]==AF[0X7]then JV=AF[0x1];end;end;end;else if pF>=81 then do if pF==82 then local tn=AF[0X3];local en=(DV[tn]);for Cn=tn+1,AF[2]do en=en..DV[Cn];end;DV[AF[1]]=en;else do DV[AF[0X001]]=nil;end;end;end;else do(DV)[AF[0x1]]=DV[AF[0X3]][DV[AF[0X02]]];end;end;end;end;end;else do if pF<0X47 then if not(pF>=68)then do if pF==0X0043 then local jk=AF[0X1];local tk=d(function(...)o();for o0 in...do(o)(true,o0);end;end);(tk)(DV[jk],DV[jk+1],DV[jk+2]);do dV=jk;end;DV[jk]=tk;do JV=AF[3];end;else do if not(DV[AF[3]]<=DV[AF[0X2]])then else do JV=AF[0X1];end;end;end;end;end;else if pF<69 then DV[AF[0X1]]=DV[AF[3]]>DV[AF[0X2]];else if pF~=0X046 then local Tm=(AF[0X00001]);local fm,Ym,im=DV[Tm],DV[Tm+1],(DV[Tm+0X00002]);(DV)[Tm]=d(function()for iY=fm,Ym,im do(o)(true,iY);end;end);JV=AF[3];else DV[AF[0X1]]=DV[AF[3]]==DV[AF[2]];end;end;end;else if not(pF>=74)then if pF<0X48 then local c8=DV[AF[3]];local o8=(AF[0X01]);(DV)[o8+0X1]=c8;(DV)[o8]=c8[AF[7]];else if pF~=73 then(DV)[AF[1]]=C(DV[AF[3]],DV[AF[2]]);else DV[AF[0X1]]=QV[AF[3]];end;end;else if pF>=0X4b then if pF==0X04c then local Ju=(AF[1]);local bu,Uu=DV[Ju]();if bu then for ij=0X01,AF[0x2]do(DV)[Ju+ij]=Uu[ij];end;do JV=AF[3];end;end;else if not(not(DV[AF[0X0003]]<=AF[7]))then else JV=AF[1];end;end;else if DV[AF[3]]~=DV[AF[2]]then JV=AF[0X01];end;end;end;end;end;end;end;else if pF<22 then if not(pF<0X00B)then if pF<16 then if not(pF>=0xD)then do if pF~=12 then(DV[AF[1]])[AF[0X4]]=AF[0x0007];else do(FV)[AF[0X04]]=DV[AF[0X1]];end;end;end;else do if pF>=14 then if pF==0X000F then(DV)[AF[1]]=DV[AF[3]][AF[0X7]];else(DV)[AF[1]]=DV[AF[0X00003]]+DV[AF[2]];end;else(DV)[AF[1]]=N(DV[AF[0x003]],DV[AF[2]]);end;end;end;else if pF>=0X13 then if pF<20 then local hV,kV=AF[1],(AF[0x3]);dV=hV+kV-1;repeat local Id,Od=HY,DV;if not(#Id>0X0)then else local gO={};do for kd,md in v,Id do for Jx,rx in v,md do do if not(rx[1]==Od and rx[2]>=0x000)then else local Tn=(rx[0x2]);if not(not gO[Tn])then else gO[Tn]={Od[Tn]};end;rx[0X1]=gO[Tn];(rx)[2]=1;end;end;end;end;end;end;until true;return true,hV,kV;else do if pF==21 then do JV=AF[3];end;else DV[AF[0X1]][DV[AF[3]]]=AF[7];end;end;end;else do if not(pF<17)then if pF==0X12 then local is=AF[0X1];DV[is](i(DV,is+1,dV));dV=is-0x1;else repeat local AA,vA=HY,DV;if not(#AA>0)then else local sC={};do for vX,fX in v,AA do for om,Xm in v,fX do do if Xm[0X00001]==vA and Xm[2]>=0 then local Vz=Xm[2];if not sC[Vz]then do sC[Vz]={vA[Vz]};end;end;(Xm)[0x0001]=sC[Vz];Xm[0X2]=1;end;end;end;end;end;end;until true;return;end;else local ID=AF[0x1];dV=ID+AF[0x3]-0x1;(DV[ID])(i(DV,ID+0X0001,dV));do dV=ID-1;end;end;end;end;end;else if pF>=5 then if not(pF<8)then if not(pF<9)then if pF==10 then local Yl=(AF[1]);DV[Yl]=DV[Yl](DV[Yl+1],DV[Yl+2]);do dV=Yl;end;else do DV[AF[1]]=DV[AF[3]]-DV[AF[2]];end;end;else if not(not(DV[AF[3]]<=DV[AF[0x00002]]))then else JV=AF[0X1];end;end;else if pF>=6 then if pF==7 then if AF[2]==0X8 then JV=JV-0X00001;wY[JV]={[0X6]=0X000051,[1]=(AF[1]-0XE9),[0X3]=(AF[3]-233)};elseif AF[0x2]==39 then JV=JV-0X00001;wY[JV]={[0X003]=(AF[0x3]-67),[0x6]=0X2e,[1]=(AF[0x01]-67)};else repeat local fS,sS=HY,(DV);if#fS>0X000 then local z8=({});for gK,GK in v,fS do for JS,cS in v,GK do do if cS[1]==sS and cS[0X2]>=0 then local fD=(cS[2]);if not z8[fD]then do(z8)[fD]={sS[fD]};end;end;(cS)[0X0001]=z8[fD];(cS)[2]=0x1;end;end;end;end;end;until true;local Fy=AF[1];return false,Fy,Fy+AF[3]-2;end;else local hs=AF[0x001];local bs=(d(function(...)o();for ix,Px,Ux,xx,Kx,rx,Nx,gx,Dx,Ax in...do(o)(true,{ix,Px,Ux,xx,Kx,rx,Nx,gx,Dx,Ax});end;end));(bs)(DV[hs],DV[hs+0X0001],DV[hs+0X00002]);do dV=hs;end;do DV[hs]=bs;end;do JV=AF[3];end;end;else local jt=AF[0X1];DV[jt](DV[jt+1],DV[jt+0X2]);dV=jt-0x1;end;end;else if not(pF<2)then if not(pF<0X3)then do if pF~=0X4 then DV[AF[0X1]]=Z(DV[AF[0X3]]);else(DV)[AF[0X0001]]=TH[AF[0X3]];end;end;else DV[AF[1]]=not DV[AF[3]];end;else if pF==0X0001 then DV[AF[0X0001]]=AF[0X4];else(DV)[AF[1]]=DV[AF[0X3]]~=DV[AF[0X02]];end;end;end;end;else if not(pF<0X000021)then if not(pF>=38)then if not(pF<0x00023)then if not(pF<0X24)then if pF~=37 then(DV)[AF[1]]=AF[4];else local Re=AF[1];local re,qe=DV[Re]();if not(re)then else do JV=AF[3];end;DV[Re+0X3]=qe;end;end;else DV[AF[1]]=DV[AF[3]]*DV[AF[2]];end;else if pF==0x0022 then local TP=(AF[0X1]);local gP,vP=DV[TP],(AF[0X00002]-0X001)*50;for Eq=0X1,dV-TP do do gP[vP+Eq]=DV[TP+Eq];end;end;else QV[AF[3]]=DV[AF[0X0001]];end;end;else if not(pF>=0x00029)then do if pF<0X027 then DV[AF[0x00001]]=DV[AF[0X3]]%AF[7];else if pF~=40 then do dV=AF[0X1];end;(DV[dV])();dV=dV-1;else if AF[2]==0X000096 then JV=JV-1;wY[JV]={[0x6]=31,[0X3]=(AF[0X3]-0X5d),[0X01]=(AF[0X1]-0X5d)};else if not(not DV[AF[1]])then else do JV=AF[0X3];end;end;end;end;end;end;else if not(pF<0X02a)then if pF~=0X2B then local Vr,nr=AF[0x0001],(AF[0X0002]-0x1)*0X32;local mr=DV[Vr];do for W2=0X1,AF[3]do mr[nr+W2]=DV[Vr+W2];end;end;else if AF[0x2]==187 then JV=JV-0X0001;(wY)[JV]={[0X01]=(AF[1]-180),[0x0006]=0X51,[0X00003]=(AF[3]-180)};else do(DV)[AF[0X1]]=DV[AF[0X0003]];end;end;end;else local Es=AF[0X1];local Js=d(function(...)(o)();for DO,GO in...do(o)(true,DO,GO);end;end);Js(DV[Es],DV[Es+0x1],DV[Es+2]);dV=Es;(DV)[Es]=Js;do JV=AF[0X3];end;end;end;end;else do if pF<0x0001b then do if pF<24 then if pF==0X17 then do(DV)[AF[0X1]]=true;end;else local as=AF[0X01];local ds,ts,Es=DV[as]();if not(ds)then else(DV)[as+0x0001]=ts;do(DV)[as+2]=Es;end;do JV=AF[0X3];end;end;end;else if not(pF>=25)then if AF[2]==0x0004e then JV=JV-0x1;(wY)[JV]={[0x06]=0X2e,[3]=(AF[0X0003]-221),[1]=(AF[1]-221)};else local DB=AF[1];for jc=DB,DB+(AF[0X3]-0x1)do DV[jc]=sV[UY+(jc-DB)+1];end;end;else if pF==26 then DV[AF[0X01]]=k(DV[AF[0X00003]],DV[AF[2]]);else local sy=GY[AF[3]];(DV)[AF[0X1]]=sy[1][sy[0X2]];end;end;end;end;else if not(pF>=30)then if not(pF>=28)then local r8=(AF[1]);local I8=(AF[3]);if I8==0 then else dV=r8+I8-0x1;end;local X8=(AF[0x2]);local L8,B8=nil,nil;do if I8==1 then L8,B8=fH(DV[r8]());else L8,B8=fH(DV[r8](i(DV,r8+1,dV)));end;end;if X8==1 then dV=r8-1;else if X8==0X0 then L8=L8+r8-0X1;dV=L8;else do L8=r8+X8-2;end;dV=L8+1;end;local X7=0X00;for sj=r8,L8 do do X7=X7+1;end;(DV)[sj]=B8[X7];end;end;else if pF==29 then do DV[AF[1]]=FV[AF[0x4]];end;else(DV[AF[0x0001]])[DV[AF[3]]]=DV[AF[0X2]];end;end;else do if pF<31 then if AF[0X002]~=241 then do if DV[AF[1]]then JV=AF[0X3];end;end;else JV=JV-1;(wY)[JV]={[0x6]=0X011,[3]=(AF[3]-29),[1]=(AF[0X01]-0X1D)};end;else do if pF==32 then(DV)[AF[0X1]]=DV[AF[3]]/DV[AF[0X002]];else repeat local l6,H6=HY,(DV);if#l6>0 then local jH={};do for ze,re in v,l6 do for NL,WL in v,re do if WL[1]==H6 and WL[0x0002]>=0 then local rd=(WL[0X2]);if not jH[rd]then jH[rd]={H6[rd]};end;(WL)[0x1]=jH[rd];WL[0X2]=1;end;end;end;end;end;until true;do return false,AF[1],dV;end;end;end;end;end;end;end;end;end;end;end;end;end;end);if not(WV)then if z(pV)~="string"then(T)(pV,0);else if a(pV,'atte\109\112t\032t\111\032yield\032acr\111s\115 \109eta\109\101\116h\111\100/C%\045\099\097ll\032b\111u\110\100\097\114y')then return coroutine.yield();end;if a(pV,"^.-:%d+: ")then T("Luraph Script:"..(oY[JV-0x1]or"(i\110\116\101\114n\097l\041")..": "..F(pV),0X0);else(T)(pV,0);end;end;else if pV then if MV~=1 then do return DV[XV](i(DV,XV+1,dV));end;else do return DV[XV]();end;end;elseif not(XV)then else return i(DV,XV,MV);end;end;end;end;if not(u)then else(u)(WY,kY);end;do return WY;end;end;NH=0X0;else do zH={};end;NH=0X2;end;else if NH~=0X6 then NH=4;else zH=nil;NH=0x8;end;end;end;end;return WH(pH,Q,nil)(...);end)(coroutine.yield,'\098\097\110\100',string,'\046\046',0x0a,next,string.char,0Xe,0X6,coroutine.wrap,"\035",string.rep,table.insert,16777216,pcall,0x3,1,true,0x00004,error,65536,unpack,'bx\111r',0X13,9,_ENV,0X00005,0,0Xd,0x0000f,12,ipairs,rawset,2,0X007,nil,{52230,0X530f3cc7,0X2D8F9E9D,1867135120,0xFe0Aa489,0x1EB3Cc7F,0XE17a5D3D,982677333,382309751},...);
